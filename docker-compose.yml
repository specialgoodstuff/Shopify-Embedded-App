version: '3'
services:

  # maps any service with a VIRTUAL_HOST env variable to the specified host 
  sea-nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    networks:
      - sea-network
    volumes:
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      #- "nginx_certs:/etc/nginx/certs:rw"

  sea-web-ngrok:
    image: wernight/ngrok
    networks:
      - sea-network
    depends_on:
      - sea-nginx-proxy
    environment:
      NGROK_AUTH: ${NGROK_AUTH}
      NGROK_SUBDOMAIN: sgs
      NGROK_LOOK_DOMAIN: sea-nginx

  sea-embedded-ngrok:
    image: wernight/ngrok
    networks:
      - sea-network
    depends_on:
      - sea-embedded
    environment:
      NGROK_AUTH: ${NGROK_AUTH}
      NGROK_SUBDOMAIN: embedded-sgs
      NGROK_PORT: 3000
      NGROK_LOOK_DOMAIN: sea-embedded

  # Nginx Service
  sea-nginx:
    image: nginx:alpine
    container_name: sea-nginx
    restart: unless-stopped
    tty: true
    networks:
      - sea-network
    volumes:
      - ./web:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    environment:
      VIRTUAL_HOST: sea.localhost
    depends_on:
      - sea-embedded
      - sea-web

  # PHP Service
  sea-web:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    image: sea-web
    container_name: sea-web 
    restart: unless-stopped
    tty: true
    environment:
      DB_HOST: sea-db
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SESSION_DOMAIN: .localhost
      APP_URL: ${APP_URL}
      EMBEDDED_URL: ${EMBEDDED_URL}
      NYLAS_CLIENT_ID: ${NYLAS_CLIENT_ID}
      NYLAS_CLIENT_SECRET: ${NYLAS_CLIENT_SECRET}
      SEA_API_PASSWORD: ${SEA_API_PASSWORD}
      SEA_SHOP_PASSWORD: ${SEA_SHOP_PASSWORD}
    working_dir: /var/www
    networks:
      - sea-network
    volumes:
      - ./web:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - sea-db
      - sea-db-test

  # Node/NextJS service
  sea-embedded:
    build: 
      context: .
      dockerfile: ./docker/node/Dockerfile
    command: sh -c "npm run dev"
    env_file: ./embedded/.env
    environment:
      VIRTUAL_HOST: embedded.sea.localhost
      HOST: ${EMBEDDED_URL}  
      APP_URL: ${APP_URL}
      EMBEDDED_URL: ${EMBEDDED_URL}
      NYLAS_CLIENT_ID: ${NYLAS_CLIENT_ID}
      SEA_API_PASSWORD: ${SEA_API_PASSWORD}
      PORT: 3000
    container_name: sea-embedded
    ports:
      - 3000:3000
    expose:
      - 3000
    networks:
      - sea-network
    volumes:
      - ./embedded:/var/www
      #- /var/www/node_modules
    command: ["npm", "run", "dev"]

  # MySQL Service
  sea-db:
    image: mysql:8.0.21
    container_name: sea-db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    networks:
      - sea-network
    volumes:
      - sea-dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf

  sea-db-test:
    image: mysql:8.0.21
    container_name: sea-db-test
    restart: unless-stopped
    tty: true
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    networks:
      - sea-network
    volumes:
      - sea-dbdata-test:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf

  sea-mailhog:
      image: 'mailhog/mailhog:latest'
      ports:
          - 1025:1025
          - 8025:8025
      networks:
          - sea-network


# Docker Networks
networks:
  sea-network:
    driver: bridge

# Volumes
volumes:
  sea-dbdata:
    driver: local
  sea-dbdata-test:
    driver: local